version: '3.8'
services:
    arches_db:
      container_name: postgres14-3_arches
      image: postgis/postgis:14-3.2
      volumes:
          - postgres-data-arches:/var/lib/postgresql/data
          - postgres-log-arches:/var/log/postgresql
          - ./init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
      ports:
        - '${PG_14_HOST_PORT:-5433}:5432'
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=postgres
        - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
        - TZ=UTC
      networks:
        - arches-network
      env_file:
        - ./.env
      restart: always

    arches_couchdb:
      container_name: couchdb2-1_arches
      image: couchdb:2.1.1
      ports:
        - "5985:5984"
      volumes:
        - couchdb-data-arches:/usr/local/var/lib/couchdb
        - couchdb-log-arches:/usr/local/var/log/couchdb
      environment:
        - COUCHDB_USER=${COUCHDB_USER}
        - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      networks:
        - arches-network
      env_file:
        - ./.env
      restart: always

    # Arches v6 uses ES7
    # TODO: Change to ES8 for ArchesV7
    arches_elasticsearch:
      container_name: elasticsearch7-17_arches
      image: ${ES_BASE_IMAGE:-elasticsearch:7.17.13}
      volumes:
        - elasticsearch-data-arches:/usr/share/elasticsearch/data
      ports:
        - "${ES_7_HOST_PORT:-9201}:9200"
        - "9301:9300"
      environment:
        - TZ=UTC
        - discovery.type=single-node
        - discovery.seed_hosts=
        #- "ES_JAVA_OPTS=-Xms400m -Xmx400m"
        - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      networks:
        - arches-network
      restart: always

    arches_rabbitmq:
      container_name: rabbitmq3_arches
      image: rabbitmq:3-management
      hostname: my-rabbit
      volumes:
        - rabbitmq-data-arches:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
        - rabbitmq-logs-arches:/var/log/rabbitmq/log
      ports:
        - 5673:5672
        - 15673:15672
      networks:
        - arches-network
      restart: always

    arches_geoserver:
      container_name: geoserver_arches
      image: kartoza/geoserver:2.24.1
      volumes:
        - geoserver-data-arches:/opt/geoserver/data_dir
      ports:
        - 8080:8080
      environment:
        - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
        - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
        - CORS_ENABLED=true
        - COMMUNITY_EXTENSIONS=cog-plugin,s3-geotiff-plugin
        - SKIP_DEMO_DATA=true
      env_file:
        - ./.env
      networks:
        - arches-network
      restart: always


#  varnish:
#    image: eeacms/varnish
#    # ports:
#    #   - '6081:6081'
#    #   - '80:80'
#    environment:
#      BACKENDS: 'tileserv:7800'
#      DNS_ENABLED: 'false'
#      COOKIES: 'true'
#      PARAM_VALUE: '-p default_ttl=600'
#    # networks:
#    #   - webapp
#    network_mode: host
#    depends_on:
#      - tileserv
#    restart: always

#  tileserv:
#    image: pramsey/pg_tileserv:latest
#    ports:
#      - '7800:7800'
#    network_mode: host
#    environment:
#      - DATABASE_URL=postgresql://postgres@localhost/dev_project
#    restart: always

    arches_memcached:
      container_name: memcached_arches
      image: memcached:1.6.22
      ports:
        - 11211:11211
      networks:
        - arches-network
      restart: always

networks:
  arches-network:
    name: arches-network
    driver: bridge

volumes:
    couchdb-data-arches:
    couchdb-log-arches:
    postgres-data-arches:
    postgres-log-arches:
    elasticsearch-data-arches:
    elasticsearch-upgrade-data-arches:
    rabbitmq-logs-arches:
    rabbitmq-data-arches:
    geoserver-data-arches: